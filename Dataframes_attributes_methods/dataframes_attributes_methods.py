# -*- coding: utf-8 -*-
"""Dataframes_attributes_methods.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hBjSZU5hrhS8iJw47Kp-wZwN41G5q1Hz

# Contents
* CSV file
* Dataframe, attributes and methods
* Comparison Operators
* Bitwise Operators
* Exercise -1
"""

#getting rid of all the unwanted warnings.
import warnings
warnings.simplefilter('ignore')

#importing pandas - python's data handeling libraries
import pandas as pd

"""# Introducing a new data format

* This time we will use another format of storing data known as .csv files. 
* This are text files in which data is stored seperated by charachter like comma,space etc.
* In pandas .csv file is reffered as data frame.
"""

df = pd.read_csv('WHO POP TB all.csv')
print(type(df)) #type() function returns the class of the input variable.

"""## About Dataframes
* Methods are said to be a property of a dataframe. 
* In addition to methods, dataframes have another property  attributes.
* A dataframe attribute is like a variable that can be accessed only in the context of dataframe.
* All the attributes are accessed using a <b>.dot notation</b>
"""

#one such attributes is columns
df.columns

"""## Displaying dataframe rows
* A dataframe has a default integer index for its rows, which starts at 0 (zero). 
* You can get and display any single row in a dataframe by using the <b>iloc</b> attribute with the index of the row you want to access as its argument. 
* using the <b>head()</b> method you can print a collection of rows from starting.
 * If you don't pass any number(index) it will return the first 5 rows.   
* The <b>tail()</b> method is same as head() but only return the entries from end.
"""

df.iloc[0] #Returns the first row of the dataframe.

df.head() #default, will return first 5 entries.

df.head(10) #This will returnt the first 10 entries.

df.tail() #returns the last 5 entries.

df.tail(10) #returns the last 10 entries.

"""# Dataframe Columns
* Accessing the columns in dataframe is same as in the previous notebook.
* But in dataframes the columns returned arein <b>series</b> datatype.
* The Series data type is a collection of values with an integer index that starts from zero.
* series datatype supports major methods of the dataframes studied above.
"""

#Accessing a single column
df['TB deaths']

#The head()and tail() methods can be used in columns as well.
df['Country'].head(10)

#Acessing multiple columns in pandas in the form of a list.
df[['Country', 'TB deaths']]

"""# Dataframe Operators
* Dataframe supports all the python operators.
* +, -,*, /, %
* ==, >=, <=, >, <, !=
* &, |
"""

df[df['Country'] == 'India'] #returns the row where country is India.

#returns a dataframe where country starts with A or a letter later with A
df[df['Country'] > 'A']['Country']

#returns the names of the country with its TB deaths where country's population is greater than 10000
df[df['Population (1000s)'] > 10000][['Country', 'TB deaths']]

#returns the detailsof the country where population is greater than 50000 and death toll  > 1000.
population = df['Population (1000s)'] #you can assign a dataframe to avoid complex expression.
deaths = df['TB deaths']
df[(population > 50000) & (deaths > 1000)]

#To get the top 10 most affected countries by TB this will appear in the reverse order. 
sorted_df = df.sort_values('TB deaths')
sorted_df[['Country', 'TB deaths']].tail(10)

# Demo Exercise
#Return a number of rows where country name only starts with 'c' and population < 1000 
country = df['Country']
df[(country >= 'C') & (country < 'D') & (population < 1000)]

"""# Exercise -1
Practice by making a copy of this notebook using File -> saveacopy in drive on google colab.
* <b>Question -1:</b> Print a dataframe where TB deaths are minimum, maximum.
* <b>Question -2:</b> print a maximum TB Deaths along with country name where Country name starts with only M.
"""